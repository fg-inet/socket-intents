cmake_minimum_required(VERSION 2.6)

PROJECT(muacc C)

INCLUDE (CheckIncludeFiles)
INCLUDE (CheckStructHasMember)

ADD_DEFINITIONS(-O0 -Wall -std=c99 -g3 -Wfatal-errors )
ADD_DEFINITIONS(-DMUACC_SOCKET="/tmp/muacc")
ADD_DEFINITIONS(-D_DEFAULT_SOURCE)
ADD_DEFINITIONS(-D_BSD_SOURCE)
ADD_DEFINITIONS(-DG_DISABLE_DEPRECATED)


IF(APPLE)
  INCLUDE_DIRECTORIES(/opt/local/include)
  LINK_DIRECTORIES(/opt/local/lib)
ELSEIF (UNIX)
	add_definitions( -DIS_LINUX )
ENDIF()

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Release)
ENDIF()

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake")

FIND_PACKAGE(GLIB2 REQUIRED)
FIND_PACKAGE(libevent REQUIRED)
FIND_PACKAGE(lex REQUIRED)
FIND_PACKAGE(yacc REQUIRED)
FIND_PACKAGE(libnl REQUIRED)
FIND_PACKAGE(UUID REQUIRED)
FIND_PACKAGE(liburiparser REQUIRED)

CHECK_STRUCT_HAS_MEMBER("struct sockaddr" "sa_len" sys/socket.h HAVE_SOCKADDR_LEN)
# Does not work for some reason: This is supposed to check if our kernel TCP stack
# logs sent data segments, so we can estimate upstream packet loss
# CHECK_STRUCT_HAS_MEMBER("struct tcp_info" "tcpi_data_segs_out" netinet/tcp.h HAVE_TCP_INFO_DATA_SEGS_OUT)
SET(HAVE_TCP_INFO_DATA_SEGS_OUT False)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/clib ${CMAKE_CURRENT_SOURCE_DIR}/lib)
INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR})
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.in ${CMAKE_CURRENT_BINARY_DIR}/config.h)

SET(POLICY_PATH "lib/mam-policies" CACHE PATH "Path to install MAM policies")

ADD_SUBDIRECTORY(clib)
ADD_SUBDIRECTORY(lib)
ADD_SUBDIRECTORY(mam)
ADD_SUBDIRECTORY(policies)
ADD_SUBDIRECTORY(examples)

ENABLE_TESTING()
ADD_SUBDIRECTORY(tests)
SET(CMAKE_CTEST_COMMAND ctest -V)
ADD_CUSTOM_TARGET(check COMMAND ${CMAKE_CTEST_COMMAND} DEPENDS socketconnecttest)
